@model ZisFaz_KeyChengg_KetYanjModel
@{
	var pageTitle = ViewBag.Title = DeclareKeys.ZisFaz_KeyChengg_KetYanj;
}
<div class="modal-dialog modal-lg">

	<!-- widget -->
	<div class="widget">
		<div class="widget-header">
			<h3><i class="fa fa-edit"></i> @pageTitle <strong class="red">( 以下都是必填项*)</strong></h3>
			<div class="btn-group widget-header-toolbar">
				<a href="#" title="关闭" class="btn-borderless" data-dismiss="modal"><i class="fa fa-close"></i></a>
			</div>
		</div>
		<div class="widget-content">
		@using (Html.BeginForm("ZisFaz_KeyChengg_KetYanj", "DeclarePop", Model.DeclareAchievementId == 0 ? null : new { id = Model.DeclareAchievementId }, FormMethod.Post, new { @class = "form-horizontal", data_after_success = "afterDialogSuccess()" }))
		{
			@Html.HiddenFor(m=>m.DeclareTargetId)
			<div class="row">
				<fieldset class="col-md-12">
					<div class="form-group">
						@Html.LabelFor(m => m.Level, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.DropDownListFor(m => m.Level, new SelectList(LevelNames.KeyChengg_KetYanj), new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Level)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.Dynamic6, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.DropDownListFor(m => m.Dynamic6, PicklistHelper.Dynamic6.GetSelectList(), new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Dynamic6)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.DateRegion, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.DateRegion, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.DateRegion)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.Dynamic3, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.DropDownListFor(m => m.Dynamic3, new SelectList(new string[] {"主持","参与" }), new { @class = "form-control" })
							@*@Html.CheckBoxFor(m => m.Dynamic3)*@
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.NameOrTitle, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.NameOrTitle, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.NameOrTitle)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.Dynamic2, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Dynamic2, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Dynamic2)
						</div>
					</div>
					@*<div class="form-group">
						@Html.LabelFor(m => m.IsShare, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.CheckBoxFor(m => m.IsShare, new { @style = "width:20px; height:20px;" })	
						</div>
					</div>*@
					@*<div class="form-group">
						@Html.LabelFor(m => m.IsDeclare, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.CheckBoxFor(m => m.IsDeclare, new { @style = "width:20px; height:20px;" })
						</div>
					</div>*@
					<div class="form-group">
						@Html.LabelFor(m => m.AttachmentName1, new { @class = "control-label col-md-3" })
						<div class="col-md-9 uploadArea" id="uploadArea1">
							@Html.HiddenFor(m => m.AttachmentUrl1, new { @class= "AttachmentUrl" })
							@Html.TextAreaFor(m => m.AttachmentName1, 5, 5, new { @class = "AttachmentName", @style = "visibility:hidden;position:absolute;" })
							<div class="input-group">
								<div class="form-control oversize upload-control uploadItem">

									@if (Model.AttachmentName1 != null && Model.AttachmentName1 != "")
									{
										foreach (var item in Model.AttachmentName1.Split('|'))
										{
											<p>
												<label title="@item">@(item.Length > 40 ? item.Substring(0, 37) + "..." : item)</label> <button type="button" class="btn btn-danger btn-xs btn-delete" onclick="delAttachment(this, $('#uploadArea1'))">删除</button>
											</p>
										}
									}
								</div>
								<span class="input-group-btn">
									<button class="btn btn-danger btn-mulit-upload" type="button" id="btn-start1" >附件上传</button>
								</span>
							</div>
							<div class="red">*支持多文件上传<br />*文件类型支持文本类型，图片和压缩包，每个文件不大于20M, <br /> *单个文件上传进度为100%表示上传成功</div>
							@Html.ValidationMessageFor(m => m.AttachmentName1)
						</div>
					</div>
					
					<div class="form-group hidden">
						@Html.LabelFor(m => m.AttachmentName2, new { @class = "control-label col-md-3" })
						<div class="col-md-9 uploadArea" id="uploadArea2">
							@Html.HiddenFor(m => m.AttachmentUrl2, new { @class = "AttachmentUrl" })
							@Html.TextAreaFor(m => m.AttachmentName2, 5, 5, new { @class = "AttachmentName", @style = "visibility:hidden;position:absolute;" })
							<div class="input-group">
								<div class="form-control oversize upload-control uploadItem">
									@if (Model.AttachmentName2 != null && Model.AttachmentName2 != "")
									{
										foreach (var item in Model.AttachmentName2.Split('|'))
										{
											<p>
												<label title="@item">@(item.Length > 40 ? item.Substring(0, 37) + "..." : item)</label> <button type="button" class="btn btn-danger btn-xs btn-delete" onclick="delAttachment(this, $('#uploadArea2'))">删除</button>
											</p>}
									}
								</div>
								<span class="input-group-btn">
									<button class="btn btn-danger btn-mulit-upload" type="button" id="btn-start2">附件上传</button>
								</span>
							</div>
							<div class="red">*支持多文件上传<br />*文件类型支持文本类型，图片和压缩包，每个文件不大于20M, <br /> *单个文件上传进度为100%表示上传成功</div>
							@Html.ValidationMessageFor(m => m.AttachmentName2)
						</div>
					</div>

					<div class="form-group hidden">
						@Html.LabelFor(m => m.AttachmentName3, new { @class = "control-label col-md-3" })
						<div class="col-md-9 uploadArea" id="uploadArea3">
							@Html.HiddenFor(m => m.AttachmentUrl3, new { @class = "AttachmentUrl" })
							@Html.TextAreaFor(m => m.AttachmentName3, 5, 5, new { @class = "AttachmentName", @style = "visibility:hidden;position:absolute;" })
							<div class="input-group">
								<div class="form-control oversize upload-control uploadItem">
									@if (Model.AttachmentName3 != null && Model.AttachmentName3 != "")
									{
										foreach (var item in Model.AttachmentName3.Split('|'))
										{
											<p>
												<label title="@item">@(item.Length > 40 ? item.Substring(0, 37) + "..." : item)</label> <button type="button" class="btn btn-danger btn-xs btn-delete" onclick="delAttachment(this, $('#uploadArea3'))">删除</button>
											</p>}
									}
								</div>
								<span class="input-group-btn">
									<button class="btn btn-danger btn-mulit-upload" type="button" id="btn-start3">附件上传</button>
								</span>
							</div>
							<div class="red">*支持多文件上传<br />*文件类型支持文本类型，图片和压缩包，每个文件不大于20M, <br /> *单个文件上传进度为100%表示上传成功</div>
							@Html.ValidationMessageFor(m => m.AttachmentName3)
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(m => m.VertificationName, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							@Html.HiddenFor(m => m.VertificationUrl)
							@Html.TextBoxFor(m => m.VertificationName, new { @style = "visibility:hidden;" })
							<div class="input-group">
								<div id="simpleUploadName" class="form-control">
									@Html.Label("", Model.VertificationName)
								</div>
								<span class="input-group-btn">
									<button class="btn btn-danger btn-upload" type="button" id="btn-vertifyUpload">证明文件上传</button>
								</span>
							</div>
							<div class="red">*证明文件类型支持文本类型，图片和压缩包，文件不大于50M</div>
							@Html.ValidationMessageFor(m => m.VertificationName)
						</div>
					</div>
					<div class="form-group">
						<div class="col-sm-9 col-lg-offset-3">
							<button type="submit" class="btn btn-primary btn-block-half"><i class="fa fa-check-circle"></i> 保存</button>
							<button type="button" class="btn btn-default btn-block-half" data-dismiss="modal">取消</button>
						</div>
					</div>
				</fieldset>
			</div>
		}
		</div>
	</div>
	<!-- end widget -->

</div>

<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone1 hidden"></form>
<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone2 hidden"></form>
<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone3 hidden"></form>

<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone hidden"></form>
<form action="@Url.Action("UploadFile", "Attachment")" class="hidden" id="fm-vertifyDropzone"></form>

<script>

	$(function () {

		ajaxSubmitForm($('.modal-dialog form'));
		
		ajaxMultipleFileUpload($('.dropzone1'), $('#btn-start1'), $('#uploadArea1'));
		ajaxMultipleFileUpload($('.dropzone2'), $('#btn-start2'), $('#uploadArea2'));
		ajaxMultipleFileUpload($('.dropzone3'), $('#btn-start3'), $('#uploadArea3'));

		//单文件上传
		ajaxSimpleFileUpload('fm-vertifyDropzone', 'btn-vertifyUpload', function (file, data) {
			$('#VertificationUrl').val(data.url);
			$('#VertificationName').val(data.filename);
			$('#simpleUploadName').html(data.filename);
		}, function (file, message) {
			popupMessage({ result: 'error', msg: message });
		});
		
	})

	function afterDialogSuccess() {
		$('#firstModal').modal('hide');
		loadFrag()
	}

</script>