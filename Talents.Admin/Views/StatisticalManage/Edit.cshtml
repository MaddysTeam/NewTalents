@model DeclareReview
@{
	var pageTitle = "提交申报申请";
	var company = CompanyHelper.GetCompanySelectList().First(x => x.Value == Model.CompanyId.ToString());
	var isInReview = Request["isReview"];
}
<div class="modal-dialog modal-lg">
	<!-- widget -->
	<div class="widget">
		<div class="widget-header">
			<h3><i class="fa fa-edit"></i> @pageTitle </h3>
			<div class="btn-group widget-header-toolbar">
				<a href="#" title="关闭" class="btn-borderless" data-dismiss="modal"><i class="fa fa-close"></i></a>
			</div>
		</div>
		<div class="widget-content">
			@using (Html.BeginForm("Edit", "DeclareReview", Model.DeclareReviewId == 0 ? null : new { id = Model.DeclareReviewId }, FormMethod.Post, new { @class = "form-horizontal", data_after_success = "afterDialogSuccess()" }))
			{
				@Html.HiddenFor(x => x.DeclareReviewId)
				@Html.HiddenFor(x => x.TeacherId)
				@Html.HiddenFor(x => x.ReviewerId)
				@Html.HiddenFor(x => x.PeriodId)
				@Html.HiddenFor(x => x.StatusKey)
				<div class="row">
					<fieldset class="col-md-12">
						<div class="form-group">
							@Html.LabelFor(m => m.TeacherName, new { @class = "col-md-3 control-label" })
							<div class="col-md-9">
								@Html.Label("TeacherName", Model.TeacherName, new { @class = "form-control" })
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(m => m.CompanyId, new { @class = "col-md-3 control-label" })
							<div class="col-md-9">
								@Html.Label("Company", company.Text, new { @class = "form-control" })
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(m => m.DeclareTargetPKID, new { @class = "col-md-3 control-label" })
							<div class="col-md-9">
								@Html.Label("Target", DeclareBaseHelper.DeclareTarget.GetName(Model.DeclareTargetPKID), new { @class = "form-control" })
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(m => m.Reason, new { @class = "col-md-3 control-label" })
							<div class="col-md-9">
								@Html.TextArea("Reasons", Model.Reason,10,5,new { @class = "form-control",@readonly="readonly"})
							</div>
						</div>


						@if (Html.GetUserProfile().IsSchoolAdmin)
						{
							<div class="form-group">
								@Html.LabelFor(m => m.ReviewComment, new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.TextAreaFor(m => m.ReviewComment, 5, 5, new { @class = "form-control" })
									@Html.ValidationMessageFor(m => m.ReviewComment)
								</div>
							</div>
						}
						else if (Html.GetUserProfile().IsDeclare && Model.StatusKey == DeclareKeys.ReviewFailure)
						{
							<div class="form-group">
								@Html.LabelFor(m => m.ReviewComment, new { @class = "control-label col-md-3" })
								<div class="col-md-9">
									@Html.TextAreaFor(m => m.ReviewComment, 5, 5, new { @class = "form-control", @readonly = "readonly" })
									@Html.ValidationMessageFor(m => m.ReviewComment)
								</div>
							</div>
						}
						<div class="form-group">
							<div class="col-sm-9 col-lg-offset-3">
								@if (Html.GetUserProfile().IsSchoolAdmin)
								{
									
										<button type="submit" class="btn btn-success btn-block-half" id="ReviewSuccess"><i class="fa fa-check-circle"></i> 通过</button>
										<button type="submit" class="btn btn-danger btn-block-half" id="ReviewFailure">不通过</button>
								
									@*else if (Model.StatusKey == DeclareKeys.ReviewSuccess)
									{
										<button class="btn btn-success btn-block-half" disabled><i class="fa fa-check-circle"></i> 审核已通过！</button>
									}
									else if (Model.StatusKey == DeclareKeys.ReviewFailure)
									{
										<button class="btn btn-danger btn-block-half" disabled><i class="fa fa-check-circle"></i> 审核不通过！</button>
									}*@
								}
								else if (Html.GetUserProfile().IsDeclare)
								{
									if (Model.StatusKey.IsEmpty())
									{
										<button type="submit" class="btn btn-primary btn-block-half"><i class="fa fa-check-circle"></i> 提交审核</button>
										<button type="button" class="btn btn-default btn-block-half" data-dismiss="modal">取消</button>
									}
									if (Model.StatusKey == DeclareKeys.ReviewProcess)
									{
										<button class="btn btn-primary btn-block-half" disabled><i class="fa fa-check-circle"></i> 待审核</button>
									}
									if (Model.StatusKey == DeclareKeys.ReviewSuccess)
									{
										<button class="btn btn-success btn-block-half" disabled><i class="fa fa-check-circle"></i> 审核已通过！</button>
									}
									@*else if (Model.StatusKey == DeclareKeys.ReviewFailure)
										{
											<button type="submit" class="btn btn-primary btn-block-half" id="Submit"><i class="fa fa-check-circle"></i> 提交审核</button>
											<button type="button" class="btn btn-default btn-block-half" data-dismiss="modal">取消</button>
										}*@

								}

							</div>
						</div>
					</fieldset>
				</div>
			}
		</div>
	</div>
	<!-- end widget -->
</div>
<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone hidden"></form>
<script>

	$(function () {

		ajaxSubmitForm($('.modal-dialog form'));
		ajaxBindFileUpload();


		$('#ReviewSuccess').on('click', function () {
			$('#StatusKey').val('@DeclareKeys.ReviewSuccess');
		});


		$('#ReviewFailure').on('click', function () {
			$('#StatusKey').val('@DeclareKeys.ReviewFailure')
		});

	})

	function afterDialogSuccess() {
		$('#firstModal').modal('hide');

		//loadFrag()

		location.href = location.href;
	}

</script>